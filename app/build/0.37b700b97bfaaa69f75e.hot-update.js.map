{"version":3,"file":"0.37b700b97bfaaa69f75e.hot-update.js","sources":["webpack:///src/components/search/Results.js","webpack:///src/data/actions/index.js","webpack:///src/data/reducers/jobs.js"],"sourcesContent":["/*jshint esversion: 6 */\nimport React, { Component } from \"react\";\nimport \"isomorphic-unfetch\";\nimport * as Styled from \"./styled/Results.js\";\nimport { getAPIHostname } from \"lib/getAPI\";\nimport Query from \"./Query.js\";\n/* redux */\nimport { connect } from \"react-redux\";\nimport * as actions from \"data/actions\";\n\n/* \n\tComponent \n*/\nclass Results extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tjobs: []\n\t\t};\n\t}\n\tasync componentWillMount() {\n\t\tconst res = await fetch(getAPIHostname() + `/api/v1/jobs?text=&start=0&limit=10000`);\n\t\tconst json = await res.json();\n\t\t// this.setState({ jobs: json.data || [], jobs_count: json.data.length || 0 });\n\t\tthis.props.dispatch(actions.jobsAdd(json.data || []));\n\t}\n\n\tfilterJobs(jobs) {\n\t\tjobs = jobs.map(function(item) {\n\t\t\titem.status = item.status || \"new\";\n\t\t\treturn item;\n\t\t});\n\t\treturn jobs;\n\t}\n\trender() {\n\t\tvar jobs_count = this.state.jobs_count; // not jobs.length on purpose\n\t\tvar jobs = this.state.jobs.length ? this.state.jobs : this.props.jobs;\n\t\tjobs = this.filterJobs(jobs);\n\t\t// get on with it...\n\t\tvar Jobs = [];\n\t\tif (jobs) {\n\t\t\tjobs.forEach(function(job, i) {\n\t\t\t\tJobs.push(\n\t\t\t\t\t<div key={job._id}>\n\t\t\t\t\t\t<div>{job.text}</div>\n\t\t\t\t\t\t<sup>{job.location}</sup>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t\treturn (\n\t\t\t<Styled.Results>\n\t\t\t\t<h2>Query:</h2>\n\t\t\t\t<Query />\n\t\t\t\t<h2> </h2>\n\n\t\t\t\t<h2>Results: {jobs_count}</h2>\n\t\t\t\t<div>{Jobs}</div>\n\t\t\t</Styled.Results>\n\t\t);\n\t}\n}\nconst mapStateToProps = (state, ownProps) => ({\n\tjobs: state.jobs\n});\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n\tonClick: () => {\n\t\t// dispatch(actions.setVisibilityFilter(ownProps.filter));\n\t}\n});\nconst ConnectedResults = connect(mapStateToProps, mapDispatchToProps)(Results);\n\n/*\n\tComponents\n*/\nexport default ConnectedResults;\n\n\n\n// WEBPACK FOOTER //\n// src/components/search/Results.js","export const jobsAdd = jobs => ({\n\ttype: \"JOBS_ADD\",\n\tjobs: jobs.map ? jobs : []\n});\nexport const jobAdd = job => ({\n\ttype: \"JOB_ADD\",\n\tjob\n});\nexport const jobStatus = (_id, _status) => ({\n\ttype: \"JOB_STATUS\",\n\t_id,\n\t_status\n});\n\n\n\n// WEBPACK FOOTER //\n// src/data/actions/index.js","const jobs = (state = [], action) => {\n\tswitch (action.type) {\n\t\tcase \"JOB_ADD\":\n\t\t\treturn [Object.assign({}, action.job), ...state];\n\t\tcase \"JOBS_ADD\":\n\t\t\treturn action.jobs;\n\t\tcase \"JOB_STATUS\":\n\t\t\treturn state.map(job => (job._id === action._id ? { ...job, status: action._status } : job));\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default jobs;\n\n\n\n// WEBPACK FOOTER //\n// src/data/reducers/jobs.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAGA;;;AACA;AAAA;AACA;AADA;AACA;AACA;AACA;AADA;AAFA;AAKA;AACA;;;;;;;;;;;AACA;AACA;;AADA;;AACA;AACA;;AADA;AACA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AASA;;;;AA/CA;AACA;AAgDA;AAAA;AACA;AADA;AAAA;AAGA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAKA;AACA;AACA;;;AAGA;;;;;;;;AC3EA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAIA;AAAA;AACA;AACA;AAFA;AAAA;AAIA;AAAA;AACA;AACA;AACA;AAHA;AAAA;;;;;;;;;;;;;;ACRA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AARA;AAUA;AACA;AACA;;;;A","sourceRoot":""}